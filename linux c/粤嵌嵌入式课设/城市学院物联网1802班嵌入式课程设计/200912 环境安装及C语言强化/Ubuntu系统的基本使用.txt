1.安装环境
	安装vmware虚拟机
	在vmware虚拟机上运行 Ubuntu


2.配置共享文件夹
	共享文件夹:是让Ubuntu系统可以访问 Windows系统的文件夹

	===> 后期可以利用Windows的编辑器来编写程序
		然后到 Ubuntu系统上去编译运行!!!

	共享文件夹在 Ubuntu中的路径:
		(其他位置)计算机 --> mnt --> hgfs --> 名称


3.ubuntu 程序设计:
	分为以下几个步骤
	1) 编辑: 利用文本编辑器,编写源代码文件
			Windows: VScode/VC6.0/VC++/VSstudent/.../记事本/Notepad++/...
					  SourceInsight ....
			Ubuntu: vim/vi   <--- linux
					 记事本
					 .....
		★★★
			身为一个合格的 程序设计者,编写出来的程序必须能"见人"

			代码的基本规范要做到位:
				1.对齐和缩进
					一般情况下,代码从顶格开始写
					遇上{}后,被{}括起来的内容要缩进一个 Tab(4个空格)
					{}各占一行,两边括号对齐,并且与上一行的第一个字母对齐

					===>
						{} 扩起来的要缩进
						其它的通通对齐

				2. 标识符 见名知其意
					标识符: 函数名  变量名  宏名 文件名 ...


	2)编译: 将源代码文件 "翻译"成机器可以识别的二进制程序文件
		两种编译方式:

		方式一) 本地编译 : 编译的程序只能在当前系统环境运行
				比如: Ubuntu的本地编译,就只能在 Ubuntu系统中运行
							===> 基于x86架构的linux系统
				      Windows的本地编译,就只能在Windows系统中运行
							===> 基于x86架构的Windows系统

				Ubuntu的本地编译  gcc命令:用来编译C程序
				语法:
					gcc  c文件名  -o  生成的程序文件名

				比如:
					gcc  1-test.c  -o  1-test
					
		方式二) 交叉编译: 将源代码文件,变异成指定的平台才能运行的程序
				比如: 在Ubuntu上编译 ARM板才能运行程序

				命令: arm-linux-gcc  用来将.c文件,编译成ARM可执行的程序

				语法:
					arm-linux-gcc  c文件名  -o  生成的程序文件名

				★★★	
					arm-linux-gcc编译生成的程序文件,只能到 ARM板上运行
					在Ubuntu和Windows上都无法运行

	3) 运行程序(执行程序)
		./程序文件名

		比如:
			./1-test





		
